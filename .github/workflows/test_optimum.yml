name: Test Optimum

on:
  workflow_dispatch:
  push:
  pull_request:
    paths:
      - "modules/optimum/**"
      - ".github/workflows/test_optimum.yml"

jobs:
  test_examples:
    name: "Examples"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, windows-2019]
        python: [3.7, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install package
      working-directory: modules/optimum
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[all] torch==1.9.1

    - name: Test MaskedLM example
      working-directory: modules/optimum/examples
      run: |
        python masked_lm_demo.py

  test_nncf:
    name: "NNCF"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        transformers-version: ["transformers[torch]", ]
        os: [ubuntu-18.04, ubuntu-20.04, windows-2019, windows-2022]
        python: [3.7, 3.9]

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install package
      working-directory: modules/optimum
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[nncf]

    - name: Install test dependencies
      working-directory: modules/optimum/tests/nncf
      run: |
        python -m pip install ${{ matrix.transformers-version }} -r requirements.txt

    - name: pip freeze
      run: |
        pip freeze

    - name: Install sndfile (Linux)
      run: |
        sudo apt-get install -y libsndfile1
      if: runner.os == 'Linux'

    - name: Prepare examples
      working-directory: modules/optimum/tests/nncf
      run: |
        # Github Actions curl does not support --output-dir, Windows does not have wget
        curl -O https://raw.githubusercontent.com/huggingface/transformers/v4.15.0/examples/pytorch/token-classification/run_ner.py 
        curl -O https://raw.githubusercontent.com/huggingface/transformers/v4.15.0/examples/pytorch/audio-classification/run_audio_classification.py
        mkdir examples
        mkdir examples/pytorch
        mkdir examples/pytorch/audio-classification
        mkdir examples/pytorch/token-classification
        cp run_ner.py examples/pytorch/token-classification
        cp run_audio_classification.py examples/pytorch/audio-classification
        # patch -p1 < run_ner.patch
        # patch -p1 < run_audio_classification.patch
        # use git apply patch to work on both Windows and Linux
        git apply --directory modules/optimum/tests/nncf --verbose --whitespace=fix --unsafe-paths run_ner.patch
        git apply --directory modules/optimum/tests/nncf --verbose --whitespace=fix --unsafe-paths run_audio_classification.patch
        
    - name: Test NNCF
      working-directory: modules/optimum/tests/nncf
      run: |
        cp ../../optimum/intel/nncf/configs/* .
        python -m unittest -v
